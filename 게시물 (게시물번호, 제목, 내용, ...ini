게시물 (게시물번호, 제목, 내용, ...)
댓글 (댓글번호, 작성자, 내용, 작성일, 게시물번호, 부모댓글번호(null 이면 가장 최상위 댓글))

[1, 제목1, 내용1]
[2, 제목2, 내용2]

[1, 존, 댓글1, 2024-04-19, 1, null]
[2, 마이클, 댓글1-1, 2024-04-19, 1, 1]
[3, 피터, 댓글2, 2024-04-19, 1, null]
[4, 존, 댓글1-1-1, 2024-04-19, 1, 2]
[5, 피터, 댓글1-2, 2024-04-19, 1, 1]

**중복확인**
- 클라이언트로부터 요청 (request body에 데이터가 포함되어 있음 )

1. request body의 데이터가 유효한 데이터인지 확인
1.1 만약 유효하지 않은 데이터이면 'VF' 응답 처리

(userId)

2. 데이터베이스의 user 테이블에서 해당하는 userId를 가지고 있는 유저가 있는지 확인
2.1 만약 가지고 있는 유저가 존재하면 'DI' 응답 처리
2.2 만약 데이터베이스 작업 중 에러가 발생하면 'DBE' 응답 처리

3. 'SU' 응답 처리


**이메일인증**
- 클라이언트로부터 요청 (request body에 데이터가 포함되어 있음 )

1. request body의 데이터가 유효한 데이터인지 확인
1.1 만약 유효하지 않은 데이터이면 'VF' 응답 처리

(userEmail)

2. 데이터베이스의 user 테이블에서 해당하는 userEmail를 가지고 있는 유저가 있는지 확인
2.1 만약 가지고 있는 유저가 존재하면 'DE' 응답 처리
2.2 만약 데이터베이스 작업 중 에러가 발생하면 'DBE' 응답 처리

3. 4자리의 인증 번호를 생성

4. 데이터베이스의 email_auth_number 테이블에 userEmail과 생성한 4자리의 인증 번호를 저장
4.1 만약 데이터베이스 작업 중 에러가 발생하면 'DBE' 응답 처리

5. userEmail에 생성한 4자리 인증 번호를 전송
5.1 만약 이메일 전송 중에 에러가 발생하면 데이터베이스의 email_auth_number 테이블에 저장한 데이터를 삭제
5.2 만약 이메일 전송 중에 에러가 발생하면 'MF' 응답 처리

6. 'SU' 응답 처리


**이메일 인증 확인**
- 클라이언트로부터 요청 (request body에 데이터가 포함되어 있음 )

1. request body의 데이터가 유효한 데이터인지 확인
1.1 만약 유효하지 않은 데이터이면 'VF' 응답 처리

(userEmail, authNumber)

2. 데이터베이스의 email 테이블에서 해당하는 userEmail를 가지고 있는 유저가 있는지 확인
2.1 만약 가지고 있는 유저가 존재하면 'DE' 응답 처리
2.2 만약 데이터베이스 작업 중 에러가 발생하면 'DBE' 응답 처리

3. 데이터베이스의 email_auth_number 테이블에 userEmail과 생성한 4자리의 인증 번호를 저장
3.1 만약 데이터베이스 작업 중 에러가 발생하면 'DBE' 응답 처리

4. userEmail에 생성한 4자리 인증 번호를 전송
4.1 만약 이메일 전송 중에 에러가 발생하면 데이터베이스의 email_auth_number 테이블에 저장한 데이터를 삭제
4.2 만약 이메일 전송 중에 에러가 발생하면 'MF' 응답 처리

5. 'SU' 응답 처리


**로그인**
- 클라이언트로부터 요청 (request body에 데이터가 포함되어 있음 )

1. request body의 데이터가 유효한 데이터인지 확인
1.1 만약 유효하지 않은 데이터이면 'VF' 응답 처리

(userId, userPassword)

2. 데이터베이스의 user 테이블에서 해당하는 userId에 해당하는 유저 레코드 조회
select * from user where userId = :userId and userPassword = :userPassword
2.1 만약 가지고 있는 유저가 존재하면 'DE' 응답 처리
2.2 만약 데이터베이스 작업 중 에러가 발생하면 'DBE' 응답 처리

3. 데이터베이스의 email_auth_number 테이블에 userEmail과 생성한 4자리의 인증 번호를 저장
3.1 만약 데이터베이스 작업 중 에러가 발생하면 'DBE' 응답 처리

4. userEmail에 생성한 4자리 인증 번호를 전송
4.1 만약 이메일 전송 중에 에러가 발생하면 데이터베이스의 email_auth_number 테이블에 저장한 데이터를 삭제
4.2 만약 이메일 전송 중에 에러가 발생하면 'MF' 응답 처리

5. 'SU' 응답 처리
